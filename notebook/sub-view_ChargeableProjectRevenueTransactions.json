{
	"name": "sub-view_ChargeableProjectRevenueTransactions",
	"properties": {
		"folder": {
			"name": "DataPlatform/DDL/fno"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "d6f5d77b-23ac-4a90-8cd5-58733c4e9d7c"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "python"
			},
			"language_info": {
				"name": "python"
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"spark.conf.set(\"spark.databricks.delta.optimizeWrite.enabled\", \"false\")\r\n",
					"spark.conf.set(\"spark.databricks.delta.autoCompact.enabled\", \"false\")"
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"%run neudesic-odp/framework/neuacc-odp-framework"
				],
				"execution_count": 4
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"fabric_workspace = get_fabric_workspace()"
				],
				"execution_count": 5
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"spark.sql(f\"\"\"\r\n",
					"CREATE OR REPLACE TABLE fo_sanctioneddb.ChargeableProjectRevenueTransactions\r\n",
					"USING DELTA\r\n",
					"LOCATION 'abfss://{fabric_workspace}@onelake.dfs.fabric.microsoft.com/fo_sanctioneddb.Lakehouse/Tables/ChargeableProjectRevenueTransactions'\r\n",
					"AS\r\n",
					"SELECT DISTINCT chargeable.TransID,\r\n",
					"  chargeable.DataAreaID,\r\n",
					"  chargeable.TransStatus\r\n",
					"FROM fo_query.ProjRevenueTransSale chargeable\r\n",
					"INNER JOIN fo_query.ProjFundingSource pfs \r\n",
					"  ON pfs.RecId = chargeable.FundingSource\r\n",
					"  AND (pfs.FundingType = 0  -- ProjFundingType::Customer \r\n",
					"       OR pfs.FundingType = 2  -- ProjFundingType::Grant\r\n",
					"      )\r\n",
					"  AND pfs.DataAreaID = chargeable.DataAreaID\r\n",
					"WHERE (\r\n",
					"  chargeable.TransStatus = 2  -- ProjTransStatus::Posted\r\n",
					"  OR chargeable.TransStatus = 3  -- ProjTransStatus::InvoiceProposal\r\n",
					"  )\r\n",
					"  AND chargeable.isActive = 1 AND pfs.isActive = 1\r\n",
					"\"\"\")\r\n",
					""
				],
				"execution_count": 6
			}
		]
	}
}