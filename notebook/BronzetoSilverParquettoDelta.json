{
	"name": "BronzetoSilverParquettoDelta",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "ChemonicsSpkPl",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "70e82b68-2a30-4323-a812-f4bfaebd6df1"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/cac456ac-e3db-41a1-8f9c-a6dc9fe183f8/resourceGroups/data-platform-rg/providers/Microsoft.Synapse/workspaces/chempdpsynapse01/bigDataPools/ChemonicsSpkPl",
				"name": "ChemonicsSpkPl",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				}
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "markdown",
				"metadata": {
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"# Load Full Refresh tables to Silver Zone\r\n",
					"Author: Sushanth Manne  \r\n",
					"Created Date: 2021-04-14  \r\n",
					"Description: Notebook to load Full Refresh tables from Bronze to Silver Layer.\r\n",
					"\r\n",
					"Prerequisites:  \r\n",
					"\r\n",
					"Input Variables:  \r\n",
					"- sourcePath\r\n",
					"- destPath"
				]
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true,
					"tags": [
						"parameters"
					]
				},
				"source": [
					"sourcePath = ''\r\n",
					"destPath   = '' "
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"from pyspark.sql import SparkSession\r\n",
					"from pyspark.sql.types import *\r\n",
					"from pyspark.sql.functions import current_date\r\n",
					"from notebookutils import mssparkutils"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"source": [
					"print(sourcePath)\r\n",
					"df=spark.read.format('parquet').load(sourcePath)\r\n",
					"mssparkutils.fs.rm(destPath, True)\r\n",
					"df.write.format('delta').mode('overwrite').save(destPath)\r\n",
					"print(destPath)       "
				],
				"execution_count": 3
			}
		]
	}
}