{
	"name": "reporting_view_GCPayType",
	"properties": {
		"folder": {
			"name": "DataPlatform/DDL/fno"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "2a2e2297-4a79-4c8f-96d4-74859b269956"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "python"
			},
			"language_info": {
				"name": "python"
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"source": [
					"spark.conf.set(\"spark.databricks.delta.optimizeWrite.enabled\", \"false\")\r\n",
					"spark.conf.set(\"spark.databricks.delta.autoCompact.enabled\", \"false\")"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"%run neudesic-odp/framework/neuacc-odp-framework"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"fabric_workspace = get_fabric_workspace()"
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"spark.sql(f\"\"\"CREATE OR REPLACE TABLE fo_sanctioneddb.GCPayType\r\n",
					"USING DELTA LOCATION 'abfss://{fabric_workspace}@onelake.dfs.fabric.microsoft.com/fo_sanctioneddb.Lakehouse/Tables/GCPayType'\r\n",
					"AS\r\n",
					"SELECT\r\n",
					"    T1.CODE AS PayType,\r\n",
					"    T1.DEFAULT AS Default_,\r\n",
					"    T1.DESCRIPTION AS Description,\r\n",
					"    T1.MULTIPLIER AS Multiplier,\r\n",
					"    CAST(NULL AS INT) AS MultiplierHourly,\r\n",
					"    T1.PAYBASETYPE AS PayBaseType,\r\n",
					"    COALESCE(T2.PERSONNELNUMBER, '') AS HCMWorker_PersonnelNumber,\r\n",
					"    COALESCE(T3.PARTYNUMBER, '') AS DIRPerson_FK_PartyNumber,\r\n",
					"    T1.CHBLOCKFUTUREDATES AS CHBlockFutureDates,\r\n",
					"    T1.CHEXCLUDEFROMADP AS CHExcludeFromADP,\r\n",
					"    T1.CHLEAVEABSENCEPLANREF AS CHLeaveAbsencePlanRef,\r\n",
					"    T1.CHINCLUDEINACCRUAL AS CHIncludeInAccrual,\r\n",
					"    T1.CHLEAVEABSENCETYPEREF AS CHLeaveAbsenceTypeRef,\r\n",
					"    T1.CHPTO AS PTO,\r\n",
					"    CONCAT(CAST(T1.PARTITION AS STRING), '|', CAST(T1.RECID AS STRING)) AS PKGCPayType,\r\n",
					"    T1.DATAAREAID AS DataAreaID,\r\n",
					"    T1.RECID AS RecID\r\n",
					"FROM fo_query.RSMGCXPayType T1\r\n",
					"LEFT JOIN fo_query.HCMWORKER T2\r\n",
					"    ON T1.Id = T2.RECID AND T1.PARTITION = T2.PARTITION\r\n",
					"    AND T2.isActive = 1\r\n",
					"LEFT JOIN fo_query.DIRPARTYTABLE T3\r\n",
					"    ON T2.PERSON = T3.RECID AND T2.PARTITION = T3.PARTITION\r\n",
					"    AND T3.INSTANCERELATIONTYPE = 11373\r\n",
					"    AND T3.isActive = 1\r\n",
					"WHERE T1.isActive = 1;\r\n",
					"\"\"\")"
				],
				"execution_count": 4
			}
		]
	}
}