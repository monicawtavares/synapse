{
	"name": "Hydration_Dim_new_practice",
	"properties": {
		"folder": {
			"name": "DataPlatform/DDL/CRM"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "8e005102-c8e7-437f-a7fc-419fc2adb042"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "python"
			},
			"language_info": {
				"name": "python"
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"%run neudesic-odp/framework/neuacc-odp-framework"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"fabric_workspace = get_fabric_workspace()"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"spark.sql(f\"\"\"CREATE OR REPLACE TABLE crm_sanctioneddb.dim_new_practice\n",
					"USING DELTA\n",
					"LOCATION 'abfss://{fabric_workspace}@onelake.dfs.fabric.microsoft.com/crm_sanctioneddb.Lakehouse/Tables/dim_new_practice'\n",
					"AS\n",
					"SELECT\n",
					"    COALESCE(source.Practice_KEY, '0') AS Practice_id_nk,\n",
					"    COALESCE(source.practice_desc_nk, 'MISSING') AS practice_desc_nk,\n",
					"    COALESCE(source.Practice, 'MISSING') AS Practice,\n",
					"    COALESCE(source.Primary_Practice_Short_Name, 'MISSING') AS Primary_Practice_Short_Name,\n",
					"    COALESCE(source.Audit_Hash_Cd, hash('MISSING')) AS Audit_Hash_Cd,\n",
					"    COALESCE(source.IsActive, 1) AS IsActive,\n",
					"    COALESCE(source.effective_start_date, CAST('2020-01-01' AS DATE)) AS effective_start_date,\n",
					"    COALESCE(source.effective_end_date, CAST('9999-12-31' AS DATE)) AS effective_end_date,\n",
					"    current_date() AS Date_Created,\n",
					"    current_date() AS Date_Updated_Last,\n",
					"    current_user() AS Created_By,\n",
					"    current_user() AS Updated_By\n",
					"FROM (\n",
					"    SELECT DISTINCT \n",
					"        P.new_practiceid AS Practice_KEY,\n",
					"        '' AS practice_desc_nk,\n",
					"        P.new_name AS Practice,\n",
					"        CASE \n",
					"            WHEN P.chem_abbreviation = '(Deprecated) Management Solutions for Development' THEN 'Management Solutions for Development'\n",
					"            WHEN P.chem_abbreviation = '(Deprecated) Corporate Partnerships' THEN 'Corporate Partnerships'\n",
					"            WHEN P.chem_abbreviation = 'Private Sector Engagement ' THEN 'Private Sector Engagement'\n",
					"            ELSE P.chem_abbreviation\n",
					"        END AS Primary_Practice_Short_Name,\n",
					"        HASH(P.new_practiceid, P.new_name, P.chem_abbreviation) AS Audit_Hash_Cd,\n",
					"        P.IsActive,\n",
					"        CAST('2020-01-01' AS DATE) AS effective_start_date,\n",
					"        CAST('9999-12-31' AS DATE) AS effective_end_date,\n",
					"        current_date() AS Date_Created,\n",
					"        current_date() AS Date_Updated_Last,\n",
					"        current_user() AS Created_By,\n",
					"        current_user() AS Updated_By\n",
					"    FROM crm_query.new_practice P\n",
					"    WHERE P.new_practiceid IS NOT NULL AND P.IsActive = 1\n",
					"    UNION ALL\n",
					"    SELECT '-1', 'INVALID', 'INVALID', 'INVALID', 'INVALID', 1, CAST('2020-01-01' AS DATE), CAST('9999-12-31' AS DATE), current_date(), current_date(), current_user(), current_user()\n",
					"    UNION ALL\n",
					"    SELECT '0', 'MISSING', 'MISSING', 'MISSING', 'MISSING', 1, CAST('2020-01-01' AS DATE), CAST('9999-12-31' AS DATE), current_date(), current_date(), current_user(), current_user()\n",
					") AS source;\n",
					"\"\"\")\n",
					""
				],
				"execution_count": 3
			}
		]
	}
}