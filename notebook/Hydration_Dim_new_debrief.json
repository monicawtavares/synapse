{
	"name": "Hydration_Dim_new_debrief",
	"properties": {
		"folder": {
			"name": "DataPlatform/DDL/CRM"
		},
		"nbformat": 4,
		"nbformat_minor": 2,
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "18d6c278-8aa8-4a74-a54a-b7a90e33c92e"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "python"
			},
			"language_info": {
				"name": "python"
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"%run neudesic-odp/framework/neuacc-odp-framework"
				],
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					"fabric_workspace = get_fabric_workspace()"
				],
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"collapsed": false
				},
				"source": [
					"spark.sql(f\"\"\"CREATE OR REPLACE TABLE crm_sanctioneddb.dim_new_debrief\n",
					"USING DELTA\n",
					"LOCATION 'abfss://{fabric_workspace}@onelake.dfs.fabric.microsoft.com/crm_sanctioneddb.Lakehouse/Tables/dim_new_debrief'\n",
					"AS\n",
					"SELECT\n",
					"    COALESCE(source.Debrief_Id_nk, '0') AS Debrief_Id_nk,\n",
					"    COALESCE(source.Debrief_desc_nk, 'MISSING') AS Debrief_desc_nk,\n",
					"    COALESCE(source.Winning_Value, 0.0) AS Winning_Value,\n",
					"    COALESCE(source.Winner_Full_Name, 'MISSING') AS Winner_Full_Name,\n",
					"    COALESCE(source.Audit_Hash_Cd, hash('0', 'MISSING')) AS Audit_Hash_Cd,\n",
					"    COALESCE(source.IsActive, 1) AS IsActive,\n",
					"    COALESCE(source.effective_start_date, CAST('2020-01-01' AS DATE)) AS effective_start_date,\n",
					"    COALESCE(source.effective_end_date, CAST('9999-12-31' AS DATE)) AS effective_end_date,\n",
					"    current_date() AS Date_Created,\n",
					"    current_date() AS Date_Updated_Last,\n",
					"    current_user() AS Created_By,\n",
					"    current_user() AS Updated_By\n",
					"FROM (\n",
					"    SELECT DISTINCT\n",
					"        D.new_debriefid AS Debrief_Id_nk,\n",
					"        '' AS Debrief_desc_nk,\n",
					"        COALESCE(D.new_valueoftheaward_base, 0.0) AS Winning_Value,\n",
					"        A.name AS Winner_Full_Name,\n",
					"        HASH(D.new_debriefid, COALESCE(D.new_valueoftheaward_base, 0.0), A.name) AS Audit_Hash_Cd,\n",
					"        D.IsActive,\n",
					"        CAST('2020-01-01' AS DATE) AS effective_start_date,\n",
					"        CAST('9999-12-31' AS DATE) AS effective_end_date,\n",
					"        current_date() AS Date_Created,\n",
					"        current_date() AS Date_Updated_Last,\n",
					"        current_user() AS Created_By,\n",
					"        current_user() AS Updated_By\n",
					"    FROM crm_query.new_debrief D\n",
					"    LEFT JOIN crm_query.account A ON A.accountid = D.new_winner\n",
					"    WHERE D.new_debriefid IS NOT NULL and D.IsActive = 1\n",
					"    UNION ALL\n",
					"    SELECT '-1', 'INVALID', -1.0, 'INVALID', 'INVALID', 1, \n",
					"    CAST('2020-01-01' AS DATE), \n",
					"    CAST('9999-12-31' AS DATE), \n",
					"    current_date(), current_date(), current_user(), current_user()\n",
					"    UNION ALL\n",
					"    SELECT '0', 'MISSING', 0.0, 'MISSING', 'MISSING', 1, \n",
					"    CAST('2020-01-01' AS DATE), \n",
					"    CAST('9999-12-31' AS DATE), \n",
					"    current_date(), current_date(), current_user(), current_user()\n",
					") AS source\n",
					"\"\"\")"
				],
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					""
				],
				"execution_count": null
			}
		]
	}
}